<?php

namespace $NAMESPACE_SERVICE$;

use Eloquent;
use Illuminate\Contracts\Pagination\LengthAwarePaginator;
use Illuminate\Database\Eloquent\Collection;

class BaseService
{
	/**
	 * @var array
	 */
	public $relationships = [];

    /**
     * @var Eloquent
     */
	public $model;

    /**
     * Returns a list of an Eloquent model.
     *
     * @return Eloquent[]|LengthAwarePaginator|Collection
     */
    public function all()
    {
        /** @var Eloquent $result */
        $result = $this->model::with($this->relationships);
        return request()->pagination == 'true' ? $result->paginate() : $result->all();
    }

    /**
     * Store a newly created Eloquent model in storage.
     *
     * @param array $data
     * @return mixed
     */
    public function create($data)
    {
        return $this->model::create($data);
    }

    /**
     * Return the specified Eloquent model by primary key
     *
     * @param int|string $id
     * @return mixed
     */
    public function find($id)
    {
        return $this->model::with($this->relationships)->find($id);
    }

    /**
     * Update the specified Eloquent model in storage by primary key.
     *
     * @param int|string $id
     * @param array $data
     * @return boolean|Eloquent
     */
    public function update($id, $data)
    {
        /** @var Eloquent $result */
        $result = $this->model::find($id);

        if (empty($result)) {
            return false;
        }

        $result->fill($data)->save();

        return $result;
    }

    /**
     * Remove the specified Eloquent model from storage by primary key.
     *
     * @param int|string $id
     * @return bool|null
     * @throws \Exception
     */
    public function destroy($id)
    {
        /** @var Eloquent $result */
        $result = $this->model::find($id);

        if (empty($result)) {
            return false;
        }

        return $result->delete();
    }
}
