<?php

namespace $NAMESPACE_CONTROLLER$;

use $NAMESPACE_REQUEST$\$MODEL_NAME$Request;
use $NAMESPACE_SERVICE$\$MODEL_NAME$Service;
use $NAMESPACE_MODEL$\$MODEL_NAME$;
use Illuminate\Http\Request;
use $NAMESPACE_APP$\Http\Controllers\ApiBaseController;

class $MODEL_NAME$Controller extends ApiBaseController
{
	/**
	 * @var $MODEL_NAME$Service $$MODEL_NAME_CAMEL$Service
	 */
	protected $$MODEL_NAME_CAMEL$Service;

	/**
	 * $MODEL_NAME$Controller constructor.
	 *
	 * @param $MODEL_NAME$Service $$MODEL_NAME_CAMEL$Service
	 */
    public function __construct($MODEL_NAME$Service $$MODEL_NAME_CAMEL$Service)
    {
        $this->$MODEL_NAME_CAMEL$Service = $$MODEL_NAME_CAMEL$Service;
    }

    $DOC_INDEX$
    public function index(Request $request)
    {
        $$MODEL_NAME_PLURAL_CAMEL$ = $this->$MODEL_NAME_CAMEL$Service->all();

        return $this->sendResponse($$MODEL_NAME_PLURAL_CAMEL$->toArray(), '$MODEL_NAME_PLURAL_HUMAN$ retrieved successfully');
    }

    $DOC_STORE$
    public function store($MODEL_NAME$Request $request)
    {
        /** @var $MODEL_NAME$ $$MODEL_NAME_CAMEL$ */
        $$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$Service->create($request->all());

        return $this->sendResponse($$MODEL_NAME_CAMEL$->toArray(), '$MODEL_NAME_HUMAN$ saved successfully');
    }

    $DOC_SHOW$
    public function show($id)
    {
        /** @var $MODEL_NAME$ $$MODEL_NAME_CAMEL$ */
        $$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$Service->find($id);

        if (empty($$MODEL_NAME_CAMEL$)) {
            return $this->sendError('$MODEL_NAME_HUMAN$ not found');
        }

        return $this->sendResponse($$MODEL_NAME_CAMEL$->toArray(), '$MODEL_NAME_HUMAN$ retrieved successfully');
    }

    $DOC_UPDATE$
    public function update($id, $MODEL_NAME$Request $request)
    {
        /** @var $MODEL_NAME$ $$MODEL_NAME_CAMEL$ */
        $$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$Service->find($id);

        if (empty($$MODEL_NAME_CAMEL$)) {
            return $this->sendError('$MODEL_NAME_HUMAN$ not found');
        }

        return $this->sendResponse($$MODEL_NAME_CAMEL$->toArray(), '$MODEL_NAME$ updated successfully');
    }

    $DOC_DESTROY$
    public function destroy($id)
    {
        /** @var $MODEL_NAME$ $$MODEL_NAME_CAMEL$ */
        $$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$Service->find($id);

        if (empty($$MODEL_NAME_CAMEL$)) {
            return $this->sendError('$MODEL_NAME_HUMAN$ not found');
        }

        return $this->sendResponse($id, '$MODEL_NAME_HUMAN$ deleted successfully');
    }
}
